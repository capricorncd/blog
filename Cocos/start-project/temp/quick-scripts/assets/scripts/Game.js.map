{"version":3,"sources":["Game.js"],"names":["cc","Class","extends","Component","properties","starPrefab","default","type","Prefab","maxStarDuration","minStarDuration","ground","Node","player","scoreDisplay","Label","scoreAudio","url","AudioClip","spawnNewStar","newStar","instantiate","node","addChild","setPosition","getNewStarPosition","getComponent","game","starDuration","random0To1","timer","randX","randY","groundY","jumpHeight","maxX","width","randomMinus1To1","p","onLoad","isGameOver","y","height","score","restart","start","update","dt","gameOver","gainScore","string","toString","audioEngine","playEffect","stopAllActions","systemEvent","on","SystemEvent","EventType","KEY_UP","e","keyCode","KEY","enter","director","loadScene"],"mappings":"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","file":"Game.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // 这个属性引用了星星预制资源\r\n        starPrefab: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n        // 星星产生后消失时间的随机范围\r\n        maxStarDuration: 0,\r\n        minStarDuration: 0,\r\n        // 地面节点，用于确定星星生成的高度\r\n        ground: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        // player 节点，用于获取主角弹跳的高度，和控制主角行动开关\r\n        player: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        // score label 的引用\r\n        scoreDisplay: {\r\n            default: null,\r\n            type: cc.Label\r\n        },\r\n        // 得分音效资源\r\n        scoreAudio: {\r\n            default: null,\r\n            url: cc.AudioClip\r\n        }\r\n    },\r\n\r\n    spawnNewStar () {\r\n        // 使用给定的模板在场景中生成一个新节点\r\n        let newStar = cc.instantiate(this.starPrefab)\r\n        // 将新增的节点添加到 Canvas 节点下面\r\n        this.node.addChild(newStar)\r\n        // 为星星设置一个随机位置\r\n        newStar.setPosition(this.getNewStarPosition())\r\n\r\n        // 将 Game 组件的实例传入星星组件\r\n        newStar.getComponent('Star').game = this\r\n        // 重置计时器，根据消失时间范围随机取一个值\r\n        this.starDuration = this.minStarDuration + cc.random0To1() * (this.maxStarDuration - this.minStarDuration)\r\n        this.timer = 0\r\n    },\r\n\r\n    getNewStarPosition () {\r\n        let randX = 0\r\n        // 根据地平面位置和主角跳跃高度，随机得到一个星星的 y 坐标\r\n        let randY = this.groundY + cc.random0To1() * this.player.getComponent('Player').jumpHeight + 50\r\n        // 根据屏幕宽度，随机得到一个星星 x 坐标\r\n        let maxX = this.node.width / 2\r\n        randX = cc.randomMinus1To1() * maxX\r\n        // 返回星星坐标\r\n        return cc.p(randX, randY)\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad () {\r\n        this.isGameOver = false\r\n        // 获取地平面的 y 轴坐标\r\n        this.groundY = this.ground.y + this.ground.height / 2\r\n        // 初始化计时器\r\n        this.timer = 0;\r\n        this.starDuration = 0\r\n        // 生成一个新的星星\r\n        this.spawnNewStar()\r\n        // 初始化计分\r\n        this.score = 0\r\n        // 重新开始游戏\r\n        this.restart()\r\n    },\r\n\r\n    start () {\r\n\r\n    },\r\n\r\n    update (dt) {\r\n        // 加入计时器更新和判断超过时限的逻辑：\r\n        // 每帧更新计时器，超过限度还没有生成新的星星\r\n        // 就会调用游戏失败逻辑\r\n        if (this.timer > this.starDuration) {\r\n            this.gameOver()\r\n            return\r\n        }\r\n        this.timer += dt\r\n    },\r\n\r\n    gainScore: function () {\r\n        this.score += 1\r\n        // 更新 scoreDisplay Label 的文字\r\n        this.scoreDisplay.string = 'Score: ' + this.score.toString()\r\n        // 播放得分音效\r\n        cc.audioEngine.playEffect(this.scoreAudio, false)\r\n    },\r\n\r\n    gameOver () {\r\n        //停止 player 节点的跳跃动作\r\n        this.player.stopAllActions() \r\n        this.isGameOver = true\r\n        // 更新 scoreDisplay Label 的文字\r\n        this.scoreDisplay.string = 'GameOver\\n Score: ' + this.score.toString() + '\\n Enter key to Restart'\r\n        // cc.director.loadScene('game')\r\n    },\r\n\r\n    restart () {\r\n        // 松开按键时，停止向该方向的加速\r\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, (e) => {\r\n            if (e.keyCode === cc.KEY.enter) {\r\n                if (this.isGameOver) {\r\n                    cc.director.loadScene('game')\r\n                    this.isGameOver = false\r\n                }\r\n            }\r\n        })\r\n    }\r\n});\r\n"]}